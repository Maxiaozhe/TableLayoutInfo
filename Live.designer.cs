#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TableDesignInfo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LIVE04")]
	public partial class LiveDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 拡張メソッドの定義
    partial void OnCreated();
    partial void InsertTableList(TableList instance);
    partial void UpdateTableList(TableList instance);
    partial void DeleteTableList(TableList instance);
    partial void InsertTableLayoutInfo(TableLayoutInfo instance);
    partial void UpdateTableLayoutInfo(TableLayoutInfo instance);
    partial void DeleteTableLayoutInfo(TableLayoutInfo instance);
    #endregion
		
		public LiveDataContext() : 
				base(global::TableDesignInfo.Properties.Settings.Default.LiveDatabase, mappingSource)
		{
			OnCreated();
		}
		
		public LiveDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LiveDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LiveDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LiveDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TableList> TableList
		{
			get
			{
				return this.GetTable<TableList>();
			}
		}
		
		public System.Data.Linq.Table<TableLayoutInfo> TableLayoutInfo
		{
			get
			{
				return this.GetTable<TableLayoutInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableList")]
	public partial class TableList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TableName;
		
		private string _TableDisplayName;
		
		private string _Comment;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnTableDisplayNameChanging(string value);
    partial void OnTableDisplayNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public TableList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableDisplayName", DbType="NVarChar(200)")]
		public string TableDisplayName
		{
			get
			{
				return this._TableDisplayName;
			}
			set
			{
				if ((this._TableDisplayName != value))
				{
					this.OnTableDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._TableDisplayName = value;
					this.SendPropertyChanged("TableDisplayName");
					this.OnTableDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableLayoutInfo")]
	public partial class TableLayoutInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TableName;
		
		private string _TableDisplayName;
		
		private string _ColumnName;
		
		private string _ColumnDisplayName;
		
		private string _DataType;
		
		private System.Nullable<int> _Length;
		
		private System.Nullable<int> _Precision;
		
		private System.Nullable<int> _Scale;
		
		private bool _Nullable;
		
		private bool _IsPrimaryKey;
		
		private System.Nullable<int> _ColumnId;
		
		private System.Nullable<int> _IndexId;
		
		private string _Comment;
		
		private string _Category;
		
    #region 拡張メソッドの定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnTableDisplayNameChanging(string value);
    partial void OnTableDisplayNameChanged();
    partial void OnColumnNameChanging(string value);
    partial void OnColumnNameChanged();
    partial void OnColumnDisplayNameChanging(string value);
    partial void OnColumnDisplayNameChanged();
    partial void OnDataTypeChanging(string value);
    partial void OnDataTypeChanged();
    partial void OnLengthChanging(System.Nullable<int> value);
    partial void OnLengthChanged();
    partial void OnPrecisionChanging(System.Nullable<int> value);
    partial void OnPrecisionChanged();
    partial void OnScaleChanging(System.Nullable<int> value);
    partial void OnScaleChanged();
    partial void OnNullableChanging(bool value);
    partial void OnNullableChanged();
    partial void OnIsPrimaryKeyChanging(bool value);
    partial void OnIsPrimaryKeyChanged();
    partial void OnColumnIdChanging(System.Nullable<int> value);
    partial void OnColumnIdChanged();
    partial void OnIndexIdChanging(System.Nullable<int> value);
    partial void OnIndexIdChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public TableLayoutInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableDisplayName", DbType="NVarChar(200)")]
		public string TableDisplayName
		{
			get
			{
				return this._TableDisplayName;
			}
			set
			{
				if ((this._TableDisplayName != value))
				{
					this.OnTableDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._TableDisplayName = value;
					this.SendPropertyChanged("TableDisplayName");
					this.OnTableDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnName", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ColumnName
		{
			get
			{
				return this._ColumnName;
			}
			set
			{
				if ((this._ColumnName != value))
				{
					this.OnColumnNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnName = value;
					this.SendPropertyChanged("ColumnName");
					this.OnColumnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnDisplayName", DbType="NVarChar(200)")]
		public string ColumnDisplayName
		{
			get
			{
				return this._ColumnDisplayName;
			}
			set
			{
				if ((this._ColumnDisplayName != value))
				{
					this.OnColumnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._ColumnDisplayName = value;
					this.SendPropertyChanged("ColumnDisplayName");
					this.OnColumnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="NVarChar(100)")]
		public string DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int")]
		public System.Nullable<int> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precision", DbType="Int")]
		public System.Nullable<int> Precision
		{
			get
			{
				return this._Precision;
			}
			set
			{
				if ((this._Precision != value))
				{
					this.OnPrecisionChanging(value);
					this.SendPropertyChanging();
					this._Precision = value;
					this.SendPropertyChanged("Precision");
					this.OnPrecisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scale", DbType="Int")]
		public System.Nullable<int> Scale
		{
			get
			{
				return this._Scale;
			}
			set
			{
				if ((this._Scale != value))
				{
					this.OnScaleChanging(value);
					this.SendPropertyChanging();
					this._Scale = value;
					this.SendPropertyChanged("Scale");
					this.OnScaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nullable", DbType="Bit NOT NULL")]
		public bool Nullable
		{
			get
			{
				return this._Nullable;
			}
			set
			{
				if ((this._Nullable != value))
				{
					this.OnNullableChanging(value);
					this.SendPropertyChanging();
					this._Nullable = value;
					this.SendPropertyChanged("Nullable");
					this.OnNullableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrimaryKey", DbType="Bit NOT NULL")]
		public bool IsPrimaryKey
		{
			get
			{
				return this._IsPrimaryKey;
			}
			set
			{
				if ((this._IsPrimaryKey != value))
				{
					this.OnIsPrimaryKeyChanging(value);
					this.SendPropertyChanging();
					this._IsPrimaryKey = value;
					this.SendPropertyChanged("IsPrimaryKey");
					this.OnIsPrimaryKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColumnId", DbType="Int")]
		public System.Nullable<int> ColumnId
		{
			get
			{
				return this._ColumnId;
			}
			set
			{
				if ((this._ColumnId != value))
				{
					this.OnColumnIdChanging(value);
					this.SendPropertyChanging();
					this._ColumnId = value;
					this.SendPropertyChanged("ColumnId");
					this.OnColumnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndexId", DbType="Int")]
		public System.Nullable<int> IndexId
		{
			get
			{
				return this._IndexId;
			}
			set
			{
				if ((this._IndexId != value))
				{
					this.OnIndexIdChanging(value);
					this.SendPropertyChanging();
					this._IndexId = value;
					this.SendPropertyChanged("IndexId");
					this.OnIndexIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(100)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
